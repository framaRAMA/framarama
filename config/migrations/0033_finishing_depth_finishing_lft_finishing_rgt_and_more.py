# Generated by Django 4.0.10 on 2023-12-01 16:53

from django.db import migrations, models

def forward(app, schema_editor):
    from treebeard.ns_tree import NS_Node
    Finishing = app.get_model('config', 'Finishing')
    nodes = Finishing.objects.all().order_by('frame__id', 'ordering')
    nodes_root = []

    def root(node):
        node_root = Finishing()
        node_root.title = 'ROOT'
        node_root.frame = node.frame
        node_root.plugin = 'group'
        node_root.enabled = True
        node_root.ordering = 0
        node_root.tree_id = node.tree_id
        node_root.lft = 1
        node_root.rgt = node.rgt + 1
        node_root.depth = 1
        return node_root

    tree_id = 0
    frame_id = None
    lft = None
    rgt = None
    for i, node in enumerate(nodes):
        if frame_id != node.frame.id:
            if frame_id:
                nodes_root.append(root(nodes[i-1]))
            tree_id = tree_id + 1
            frame_id = node.frame.id
            lft = 2
            rgt = 3
        else:
            lft = rgt + 1
            rgt = lft + 1
        node.tree_id = tree_id
        node.lft = lft
        node.rgt = rgt
        node.depth = 2
        node.ordering = 0
    if nodes:
        Finishing.objects.bulk_update(nodes, ["tree_id", "lft", "rgt", "depth", "ordering"])
        nodes_root.append(root(nodes[len(nodes)-1]))
        Finishing.objects.bulk_create(nodes_root)


def backward():
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('config', '0032_displayitem_duration_download_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='finishing',
            name='depth',
            field=models.PositiveIntegerField(db_index=True, default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='finishing',
            name='lft',
            field=models.PositiveIntegerField(db_index=True, default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='finishing',
            name='rgt',
            field=models.PositiveIntegerField(db_index=True, default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='finishing',
            name='tree_id',
            field=models.PositiveIntegerField(db_index=True, default=1),
            preserve_default=False,
        ),
        migrations.RunPython(forward, backward),
        migrations.AlterField(
            model_name='finishing',
            name='plugin_config',
            field=models.JSONField(blank=True, default=dict, help_text='Plugin settings in JSON structure', null=True, verbose_name='Plugin config'),
        ),
        migrations.AlterField(
            model_name='framecontext',
            name='plugin_config',
            field=models.JSONField(blank=True, default=dict, help_text='Plugin settings in JSON structure', null=True, verbose_name='Plugin config'),
        ),
        migrations.AlterField(
            model_name='sorting',
            name='plugin_config',
            field=models.JSONField(blank=True, default=dict, help_text='Plugin settings in JSON structure', null=True, verbose_name='Plugin config'),
        ),
        migrations.AlterField(
            model_name='sourcestep',
            name='plugin_config',
            field=models.JSONField(blank=True, default=dict, help_text='Plugin settings in JSON structure', null=True, verbose_name='Plugin config'),
        ),
    ]
